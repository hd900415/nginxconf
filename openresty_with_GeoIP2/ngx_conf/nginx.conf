user  nobody;
worker_processes  4;
worker_cpu_affinity 0001 0010 0100 1000;
#worker_cpu_affinity 0001 0010 0100 1000 1001 1010 1100 1101;   
#worker_cpu_affinity auto;
worker_priority -20;
worker_rlimit_nofile 65535; 


error_log  logs/error.log;
pid        logs/nginx.pid;

events {
    use epoll;
    worker_connections 100000; 
    multi_accept on;   #允许尽可能接受多的连接  默认值off 建议改为 on
    accept_mutex on;   # 防止被唤醒,从而加重服务器压力,默认值 off 建议改为on
    accept_mutex_delay 10ms;  # 设置获得互斥锁的最少延迟时间。 默认值 500ms
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
    map $http_x_forwarded_for $clientRealIp {
	"" $remote_addr;
	~^(?P<firstAddr>[0-9\.]+),?.*$ $firstAddr;
      }                 

    map $http_upgrade $connection_upgrade {
         default upgrade;
         '' close;
     }
 
    map $geoip2_data_country_code $allowed_country {
                default no;
                CN yes;
                PH yes;
		AE yes;
        }

    log_format main_json escape=json '{'
      '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
      '"connection": "$connection", ' # connection serial number
      '"connection_requests": "$connection_requests", ' # number of requests made in connection
      '"pid": "$pid", ' # process pid
      '"request_id": "$request_id", ' # the unique request id
      '"request_length": "$request_length", ' # request length (including headers and body)
      '"remote_addr": "$remote_addr", ' # client IP
      '"remote_user": "$remote_user", ' # client HTTP username
      '"remote_port": "$remote_port", ' # client port
      '"time_local": "$time_local", '
      '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
      '"request": "$request", ' # full path no arguments if the request
      '"request_uri": "$request_uri", ' # full path and arguments if the request
      '"args": "$args", ' # args
      '"status": "$status", ' # response status code
      '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
      '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client
      '"http_referer": "$http_referer", ' # HTTP referer
      '"http_user_agent": "$http_user_agent", ' # user agent
      '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for
      '"http_host": "$http_host", ' # the request Host: header
      '"server_name": "$server_name", ' # the name of the vhost serving the request
      '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
      '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
      '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
      '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
      '"upstream_response_time": "$upstream_response_time", ' # time spend receiving upstream body
      '"upstream_response_length": "$upstream_response_length", ' # upstream response length
      '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
      '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
      '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
      '"scheme": "$scheme", ' # http or https
      '"request_method": "$request_method", ' # request method
      '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
      '"pipe": "$pipe", ' # “p” if request was pipelined, “.” otherwise
      '"gzip_ratio": "$gzip_ratio", '
      '"http_cf_ray": "$http_cf_ray"'
 '}';

    access_log  logs/access.log  main_json;

    lua_shared_dict limit 10m;
    lua_package_path "/usr/local/openresty2/nginx/conf/waf/?.lua";
    init_by_lua_file "/usr/local/openresty2/nginx/conf/waf/init.lua";
    access_by_lua_file "/usr/local/openresty2/nginx/conf/waf/access.lua";

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    server_tokens   off; 
    autoindex       off;

    proxy_hide_header X-Powered-By;
    fastcgi_intercept_errors on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    client_header_timeout 60;
    client_body_timeout 10;
    send_timeout 60;
    reset_timedout_connection off;
    limit_conn_zone $binary_remote_addr zone=one:50m;
    limit_conn_log_level notice;
    limit_conn_status 503; 

    limit_req_zone  $binary_remote_addr zone=two:50m rate=3r/s;
    limit_req_log_level notice; 
    limit_req_status 503; 
    #limit_conn one 100;
    #limit_rate 100k;
    charset UTF-8;



    gzip  on;
    gzip_static off; 
    gzip_disable "msie6";
    gzip_proxied any;
    gzip_min_length 1024;
    gzip_comp_level 5;
    gzip_buffers 4 16k;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    open_file_cache max=65535 inactive=30s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
 
    proxy_cache_path /usr/local/openresty2/nginx/my_proxy_temp levels=1:2 keys_zone=web_cache:50m inactive=60m max_size=1g;

    include /usr/local/openresty2/nginx/conf/fastcgi.conf;
    include /usr/local/openresty2/nginx/conf/conf.d/*;
    include /usr/local/openresty2/nginx/conf/vhost/*.conf;
    

}
